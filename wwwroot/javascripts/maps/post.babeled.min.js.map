{"version":3,"sources":["post.babeled.min.js","post.babeled.js"],"names":["cachePostInput","$input","$","this","cachedInputs","JSON","parse","Cookies","get","attr","val","set","expires","readInputCache","key","css","background","window","location","host","background-size","tinymce","activeEditor","setContent","removeInputCache","remove","uploadPost","uploadImages","success","xhr","XMLHttpRequest","open","onload","res","responseText","status","url","showTipMsg","msg","contentHtml","save","quote","getQuoteText","formData","FormData","append","send","updatePost","formId","form","console","log","initMce","selector","docId","init","skin","language","content_css","body_class","plugins","toolbar","image_caption","paste_data_images","fontsize_formats","menubar","images_upload_url","statusbar","min_height","setup","ed","on","e","change","lastIndexOf","uploadPic","img","next","loader","find","label","tempImgInput","type","class","display","position","files","reader","FileReader","target","result","readAsDataURL","removeClass","addClass","updateProgress","oEvent","pct","Math","ceil","loaded","total","height","text","fileUploadReq","withCredentials","json","upload","addEventListener","name","click","uploadHero","hero","computProgress","percentComplete","GetCurrentDate","cdate","Date","month","getMonth","currentDate","getFullYear","getDate","htmlStr","p","each","length","document","ready","showNames","_this","resList","empty","geonames","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","geoname","value","listItem","listLink","geonameId","toponymName","countryName","err","execCommand","keyup","transloader","targetUrl","data","uploadType","html","show","hide","initUploadOf"],"mappings":"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","file":"post.babeled.min.js","sourcesContent":["'use strict';\n\n$(document).ready(function () {\n    if (!Cookies.get('new_post')) {\n        Cookies.set('new_post', {});\n    }\n    initMce('#input-body');\n    $('form#frm').find('input').change(cachePostInput);\n\n    $('#btn-img').click(function () {\n        var tempImgInput = $('<input>').attr({\n            'type': 'file',\n            'class': 'temp-input'\n        }).css({\n            'display': 'none',\n            'position': 'absolute'\n        }).change(function () {\n            if (this.files && this.files[0]) {\n                var reader = new FileReader();\n                reader.onload = function (e) {\n                    tinymce.activeEditor.execCommand('insertHTML', false, '<img class=\"inline-img\" src=\"' + e.target.result + '\" width=\"100%\" >');\n\n                    tinymce.activeEditor.uploadImages();\n                };\n                reader.readAsDataURL(this.files[0]);\n            }\n\n            $('.temp-input').remove();\n        });\n        $('body').append(tempImgInput);\n        tempImgInput.click();\n    });\n\n    ///////geonames\n    function showNames() {\n        var _this = this;\n        var resList = $(_this).next('.result');\n        $.get('http://api.geonames.org/searchJSON?lang=ZH&username=zhouzoro&maxRows=10&q=' + $(_this).val(), function (res) {\n            resList.empty();\n            if (res.geonames.length === 0) {\n                resList.append('No Results Found');\n            }\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = res.geonames[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var geoname = _step.value;\n\n                    var listItem = $('<li>').attr('class', 'geoname-resultlist-item');\n                    var listLink = $('<a>').attr('data-id', geoname.geonameId).append($('<span>').attr('class', 'name').text(geoname.name)).append($('<span>').attr('class', 'toponymName').text('(' + geoname.toponymName + ')'));\n                    if (geoname.countryName && geoname.countryName !== '') {\n                        listLink.append($('<span>').attr('class', 'countryName').text(', ' + geoname.countryName)).append($('<span>').attr('class', 'toponymName').text('(' + geoname.toponymName + ')'));\n                    }\n                    resList.append(listItem.append(listLink));\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        });\n    }\n    $('.geosearch').keyup(showNames).change(showNames);\n});\n\nfunction cachePostInput() {\n    var $input = $(this);\n    var cachedInputs = JSON.parse(Cookies.get('new_post'));\n    cachedInputs[$input.attr('name')] = $input.val();\n    Cookies.set('new_post', cachedInputs, { expires: 7 });\n}\n\nfunction readInputCache() {\n    var cachedInputs = JSON.parse(Cookies.get('new_post'));\n    for (var key in cachedInputs) {\n        $('input[name=\"' + key + '\"').val(cachedInputs[key]);\n        if (key === \"hero-img\") {\n            $('.post-hero').css({ 'background': 'url(\"http://' + window.location.host + cachedInputs[key] + '\")', 'background-size': 'cover' });\n        }\n        if (key === \"content\") {\n            tinymce.activeEditor.setContent(cachedInputs[key]);\n        }\n    }\n}\n\nfunction removeInputCache() {\n    Cookies.remove('new_post');\n}\n\nfunction uploadPost() {\n    tinymce.activeEditor.uploadImages(function (success) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('POST', '/cruiser_reports');\n\n        xhr.onload = function () {\n            var res = JSON.parse(xhr.responseText);\n            if (res.status == '200') {\n                removeInputCache();\n                window.location = res.url;\n            } else if (res.status == '504') {\n                showTipMsg('上传失败: ' + res.msg, 0);\n            }\n        };\n\n        var contentHtml = tinymce.activeEditor.save();\n        var quote = getQuoteText(contentHtml);\n        $('input[name=content]').val(contentHtml);\n        $('input[name=quote]').val(quote);\n        var formData = new FormData($('form#frm')[0]);\n        formData.append('username', Cookies.get('username'));\n        formData.append('email', Cookies.get('email'));\n        xhr.send(formData);\n    });\n}\n\nfunction updatePost(formId) {\n    tinymce.activeEditor.uploadImages(function (success) {\n        var form = $(formId);\n        var xhr = new XMLHttpRequest();\n        xhr.open(form.attr('method'), form.attr('action'));\n\n        xhr.onload = function () {\n            console.log(xhr.responseText);\n            var res = JSON.parse(xhr.responseText);\n            if (res.status == '200') {\n                removeInputCache();\n                window.location = res.url;\n            } else if (res.status == '504') {\n                showTipMsg('上传失败: ' + res.msg, 0);\n            }\n        };\n        var contentHtml = tinymce.activeEditor.save();\n        var quote = getQuoteText(contentHtml);\n        $('input[name=content]').val(contentHtml);\n        $('input[name=quote]').val(quote);\n        var formData = new FormData(form[0]);\n        formData.append('username', Cookies.get('username'));\n        formData.append('email', Cookies.get('email'));\n        xhr.send(formData);\n    });\n}\n\nfunction initMce(selector, docId) {\n    var inline = docId ? true : false;\n    tinymce.init({\n        selector: selector,\n        skin: 'mxc1',\n        language: 'zh_CN',\n        content_css: '/stylesheets/dist/travelogue.min.css',\n        body_class: 'travelogue',\n        //inline: inline,\n        plugins: [\"autoresize\", \"advlist\", \"autolink\", \"lists\", \"link\", \"image\", \"charmap\", \"print\", \"preview\", \"anchor\", \"searchreplace\", \"visualblocks\", \"code\", \"fullscreen\", \"insertdatetime\", \"media\", \"table\", \"paste\", \"imagetools\"],\n        // plugins: 'table autoresize paste image imagetools preview',\n        /*style_formats: [{ title: 'H1', block: 'h1' }, { title: 'H2', block: 'h2' }, { title: 'H3', block: 'h3' }, { title: 'Bold text', inline: 'strong' }, { title: 'Red text', inline: 'span', styles: { color: '#ff0000' } }, { title: 'Red header', block: 'h1', styles: { color: '#ff0000' } }, { title: 'Badge', inline: 'span', styles: { display: 'inline-block', border: '1px solid #2276d2', 'border-radius': '5px', padding: '2px 5px', margin: '0 2px', color: '#2276d2' } }, { title: 'Table row 1', selector: 'tr', classes: 'tablerow1' }],\r\n        formats: {\r\n            alignleft: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'left' },\r\n            aligncenter: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'center' },\r\n            alignright: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'right' },\r\n            alignfull: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'full' },\r\n            bold: { inline: 'span', 'classes': 'bold' },\r\n            italic: { inline: 'span', 'classes': 'italic' },\r\n            underline: { inline: 'span', 'classes': 'underline', exact: true },\r\n            strikethrough: { inline: 'del' },\r\n            customformat: { inline: 'span', styles: { color: '#00ff00', fontSize: '20px' }, attributes: { title: 'My custom format' }, classes: 'example1' }\r\n        },*/\n        //content_css: '/stylesheets/person.min.css',\n        //plugins: \"advlist lists link anchor contextmenu paste image autoresize preview imagetools lists\",\n        toolbar: 'undo redo styleselect fontsizeselect bold italic underline alignleft aligncenter alignright alignfull advlist lists link',\n        image_caption: true,\n        paste_data_images: true,\n        //block_formats: 'Paragraph=p;Header 1=h1;Header 2=h2;Header 3=h3',\n        fontsize_formats: '8pt 9pt 10pt 11pt 12pt 14pt 18pt 24pt',\n        //plugins: \"contextmenu\",\n        //contextmenu: \"formatselect bold italic link image inserttable | cell row column deletetable\",\n        menubar: false,\n        images_upload_url: '/upload/images',\n        statusbar: false,\n        min_height: 480,\n\n        setup: function setup(ed) {\n            ed.on('change', function (e) {\n                var contentHtml = ed.save();\n                $('input[name=content]').val(contentHtml).change();\n            });\n            ed.on('init', function (e) {\n\n                if ($('input[name=content]').val()) {\n                    tinymce.activeEditor.setContent($('input[name=content]').val());\n                }\n\n                if ($('input[name=cover]').val()) {\n                    $('.post-hero').css({ 'background': 'url(\"http://' + window.location.host + $('input[name=cover]').val() + '\")', 'background-size': 'cover' });\n                }\n                if (!window.location.host.lastIndexOf('edit')) {\n                    readInputCache();\n                }\n            });\n        }\n    });\n}\n\n$('.add-btn').click(function () {\n    var transloader = $('<div>').attr('class', 'expand-transition');\n    $(this).append(transloader);\n    var targetUrl = $(this).data('url');\n    var uploadType = $(this).data('type');\n    $.get(targetUrl, function (res) {\n        $('#modal-cust').find('.container').html(res);\n        $('#btn-cancel').click(function () {\n            $('#body').show();\n            $('#modal-cust').hide('fast');\n            $('#modal-cust').find('.container').html('');\n        });\n        $('#modal-cust').show('slow');\n        $('#body').hide('slow');\n        initUploadOf(uploadType);\n        transloader.remove();\n        $('#edit-pic').click(uploadPic);\n    });\n});\n\nfunction uploadPic() {\n    var img = $(this).next('img');\n    var loader = $(this).find('#pic-loader');\n    var label = $(this).find('label');\n    var tempImgInput = $('<input>').attr({\n        'type': 'file',\n        'class': 'temp-input'\n    }).css({\n        'display': 'none',\n        'position': 'absolute'\n    }).change(function () {\n        if (this.files && this.files[0]) {\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                img.attr('src', e.target.result);\n            };\n            reader.readAsDataURL(this.files[0]);\n            label.removeClass('btn').addClass('pct');\n            var updateProgress = function updateProgress(oEvent) {\n                var pct = Math.ceil(100 * oEvent.loaded / oEvent.total);\n                var height = 100 - pct;\n                loader.css({ 'height': height + 'px' });\n                label.text(pct + '%');\n            };\n            var fileUploadReq = new XMLHttpRequest();\n            fileUploadReq.withCredentials = false;\n            fileUploadReq.open('POST', '/images');\n\n            fileUploadReq.onload = function () {\n                var json = JSON.parse(fileUploadReq.responseText);\n                console.log(json.location);\n                img.attr('src', json.location);\n                label.removeClass('pct').addClass('btn').text('change');\n                $('.temp-input').remove();\n            };\n            fileUploadReq.upload.addEventListener(\"progress\", updateProgress, false);\n            var formData = new FormData();\n            formData.append('image', this.files[0], this.files[0].name);\n            fileUploadReq.send(formData);\n        }\n    });\n    $('body').append(tempImgInput);\n    tempImgInput.click();\n}\n\nfunction uploadHero() {\n    var hero = $('.post-hero');\n    var tempImgInput = $('<input>').attr({\n        'type': 'file',\n        'class': 'temp-input'\n    }).css({\n        'display': 'none',\n        'position': 'absolute'\n    }).change(function () {\n\n        if (this.files && this.files[0]) {\n            /*var reader = new FileReader();\r\n              reader.onload = function(e) {\r\n                hero.css({ 'background': 'url(\"' + e.target.result + '\")', 'background-size': 'cover' });\r\n            };\r\n            reader.readAsDataURL(this.files[0]);*/\n            /*label.removeClass('btn').addClass('pct');\r\n            var updateProgress = function updateProgress(oEvent) {\r\n                var pct = Math.ceil(100 * oEvent.loaded / oEvent.total);\r\n                var height = 100 - pct;\r\n                loader.css({ 'height': height + 'px' });\r\n                label.text(pct + '%');\r\n            };*/\n            var fileUploadReq = new XMLHttpRequest();\n            fileUploadReq.withCredentials = false;\n            fileUploadReq.open('POST', '/upload/images');\n\n            fileUploadReq.onload = function () {\n                var json = JSON.parse(fileUploadReq.responseText);\n                hero.css({ 'background': 'url(\"http://' + window.location.host + json.location + '\")', 'background-size': 'cover' });\n                $('.input-hero-img').val(json.location).change();\n                //label.removeClass('pct').addClass('btn').text('change');\n                $('.temp-input').remove();\n            };\n            //fileUploadReq.upload.addEventListener(\"progress\", updateProgress, false);\n            var formData = new FormData();\n            formData.append('image', this.files[0], this.files[0].name);\n            fileUploadReq.send(formData);\n        }\n    });\n    $('body').append(tempImgInput);\n    tempImgInput.click();\n}\n\nfunction computProgress(oEvent) {\n    var percentComplete = Math.ceil(1000 * oEvent.loaded / oEvent.total) / 10 + '%';\n    return percentComplete;\n}\n\nfunction GetCurrentDate() {\n    var cdate = new Date();\n    var month = cdate.getMonth() < 9 ? '0' + (cdate.getMonth() + 1) : cdate.getMonth() + 1;\n    var currentDate = cdate.getFullYear() + \"-\" + month + \"-\" + cdate.getDate();\n    return currentDate;\n}\n\nfunction getQuoteText(htmlStr) {\n    var p = '';\n    $(htmlStr).find('*').each(function () {\n        if ($(this).text().length > 32) {\n            p = $(this).text();\n            return false;\n        }\n    });\n    return p;\n}","$(document).ready(() => {\r\n    if (!Cookies.get('new_post')) {\r\n        Cookies.set('new_post', {});\r\n    }\r\n    initMce('#input-body');\r\n    $('form#frm').find('input').change(cachePostInput);\r\n\r\n    $('#btn-img').click(function() {\r\n        var tempImgInput = $('<input>').attr({\r\n            'type': 'file',\r\n            'class': 'temp-input'\r\n        }).css({\r\n            'display': 'none',\r\n            'position': 'absolute'\r\n        }).change(function() {\r\n            if (this.files && this.files[0]) {\r\n                var reader = new FileReader();\r\n                reader.onload = function(e) {\r\n                    tinymce.activeEditor.execCommand('insertHTML', false, '<img class=\"inline-img\" src=\"' + e.target.result + '\" width=\"100%\" >');\r\n\r\n                    tinymce.activeEditor.uploadImages();\r\n                };\r\n                reader.readAsDataURL(this.files[0]);\r\n            }\r\n\r\n            $('.temp-input').remove();\r\n        });\r\n        $('body').append(tempImgInput);\r\n        tempImgInput.click();\r\n\r\n    });\r\n\r\n    ///////geonames\r\n    function showNames() {\r\n        var _this = this;\r\n        var resList = $(_this).next('.result');\r\n        $.get('http://api.geonames.org/searchJSON?lang=ZH&username=zhouzoro&maxRows=10&q=' + $(_this).val(), function(res) {\r\n            resList.empty();\r\n            if (res.geonames.length === 0) {\r\n                resList.append('No Results Found');\r\n            }\r\n            for (let geoname of res.geonames) {\r\n                var listItem = $('<li>').attr('class', 'geoname-resultlist-item');\r\n                var listLink = $('<a>').attr('data-id', geoname.geonameId).append($('<span>').attr('class', 'name').text(geoname.name)).append($('<span>').attr('class', 'toponymName').text('(' + geoname.toponymName + ')'));\r\n                if (geoname.countryName && geoname.countryName !== '') {\r\n                    listLink.append($('<span>').attr('class', 'countryName').text(', ' + geoname.countryName)).append($('<span>').attr('class', 'toponymName').text('(' + geoname.toponymName + ')'));\r\n                }\r\n                resList.append(listItem.append(listLink));\r\n            }\r\n        })\r\n\r\n    }\r\n    $('.geosearch').keyup(showNames).change(showNames);\r\n});\r\n\r\nfunction cachePostInput() {\r\n    var $input = $(this);\r\n    var cachedInputs = JSON.parse(Cookies.get('new_post'));\r\n    cachedInputs[$input.attr('name')] = $input.val();\r\n    Cookies.set('new_post', cachedInputs, { expires: 7 });\r\n}\r\n\r\nfunction readInputCache() {\r\n    var cachedInputs = JSON.parse(Cookies.get('new_post'));\r\n    for (let key in cachedInputs) {\r\n        $('input[name=\"' + key + '\"').val(cachedInputs[key]);\r\n        if (key === \"hero-img\") {\r\n            $('.post-hero').css({ 'background': 'url(\"http://' + window.location.host + cachedInputs[key] + '\")', 'background-size': 'cover' });\r\n        }\r\n        if (key === \"content\") {\r\n            tinymce.activeEditor.setContent(cachedInputs[key]);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction removeInputCache() {\r\n    Cookies.remove('new_post');\r\n}\r\n\r\nfunction uploadPost() {\r\n    tinymce.activeEditor.uploadImages(function(success) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('POST', '/cruiser_reports');\r\n\r\n        xhr.onload = function() {\r\n            var res = JSON.parse(xhr.responseText);\r\n            if (res.status == '200') {\r\n                removeInputCache();\r\n                window.location = res.url;\r\n            } else if (res.status == '504') {\r\n                showTipMsg('上传失败: ' + res.msg, 0);\r\n            }\r\n        };\r\n\r\n        var contentHtml = tinymce.activeEditor.save();\r\n        var quote = getQuoteText(contentHtml);\r\n        $('input[name=content]').val(contentHtml);\r\n        $('input[name=quote]').val(quote);\r\n        var formData = new FormData($('form#frm')[0]);\r\n        formData.append('username', Cookies.get('username'));\r\n        formData.append('email', Cookies.get('email'));\r\n        xhr.send(formData);\r\n    });\r\n}\r\n\r\nfunction updatePost(formId) {\r\n    tinymce.activeEditor.uploadImages(function(success) {\r\n        var form = $(formId);\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(form.attr('method'), form.attr('action'));\r\n\r\n        xhr.onload = function() {\r\n            console.log(xhr.responseText);\r\n            var res = JSON.parse(xhr.responseText);\r\n            if (res.status == '200') {\r\n                removeInputCache();\r\n                window.location = res.url;\r\n            } else if (res.status == '504') {\r\n                showTipMsg('上传失败: ' + res.msg, 0);\r\n            }\r\n        };\r\n        var contentHtml = tinymce.activeEditor.save();\r\n        var quote = getQuoteText(contentHtml);\r\n        $('input[name=content]').val(contentHtml);\r\n        $('input[name=quote]').val(quote);\r\n        var formData = new FormData(form[0]);\r\n        formData.append('username', Cookies.get('username'));\r\n        formData.append('email', Cookies.get('email'));\r\n        xhr.send(formData);\r\n    });\r\n}\r\n\r\n\r\nfunction initMce(selector, docId) {\r\n    var inline = docId ? true : false;\r\n    tinymce.init({\r\n        selector: selector,\r\n        skin: 'mxc1',\r\n        language: 'zh_CN',\r\n        content_css: '/stylesheets/dist/travelogue.min.css',\r\n        body_class: 'travelogue',\r\n        //inline: inline,\r\n        plugins: [\"autoresize\", \"advlist\", \"autolink\", \"lists\", \"link\", \"image\", \"charmap\", \"print\", \"preview\", \"anchor\", \"searchreplace\", \"visualblocks\", \"code\", \"fullscreen\", \"insertdatetime\", \"media\", \"table\", \"paste\", \"imagetools\"],\r\n        // plugins: 'table autoresize paste image imagetools preview',\r\n        /*style_formats: [{ title: 'H1', block: 'h1' }, { title: 'H2', block: 'h2' }, { title: 'H3', block: 'h3' }, { title: 'Bold text', inline: 'strong' }, { title: 'Red text', inline: 'span', styles: { color: '#ff0000' } }, { title: 'Red header', block: 'h1', styles: { color: '#ff0000' } }, { title: 'Badge', inline: 'span', styles: { display: 'inline-block', border: '1px solid #2276d2', 'border-radius': '5px', padding: '2px 5px', margin: '0 2px', color: '#2276d2' } }, { title: 'Table row 1', selector: 'tr', classes: 'tablerow1' }],\r\n        formats: {\r\n            alignleft: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'left' },\r\n            aligncenter: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'center' },\r\n            alignright: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'right' },\r\n            alignfull: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'full' },\r\n            bold: { inline: 'span', 'classes': 'bold' },\r\n            italic: { inline: 'span', 'classes': 'italic' },\r\n            underline: { inline: 'span', 'classes': 'underline', exact: true },\r\n            strikethrough: { inline: 'del' },\r\n            customformat: { inline: 'span', styles: { color: '#00ff00', fontSize: '20px' }, attributes: { title: 'My custom format' }, classes: 'example1' }\r\n        },*/\r\n        //content_css: '/stylesheets/person.min.css',\r\n        //plugins: \"advlist lists link anchor contextmenu paste image autoresize preview imagetools lists\",\r\n        toolbar: 'undo redo styleselect fontsizeselect bold italic underline alignleft aligncenter alignright alignfull advlist lists link',\r\n        image_caption: true,\r\n        paste_data_images: true,\r\n        //block_formats: 'Paragraph=p;Header 1=h1;Header 2=h2;Header 3=h3',\r\n        fontsize_formats: '8pt 9pt 10pt 11pt 12pt 14pt 18pt 24pt',\r\n        //plugins: \"contextmenu\",\r\n        //contextmenu: \"formatselect bold italic link image inserttable | cell row column deletetable\",\r\n        menubar: false,\r\n        images_upload_url: '/upload/images',\r\n        statusbar: false,\r\n        min_height: 480,\r\n\r\n        setup: function(ed) {\r\n            ed.on('change', function(e) {\r\n                var contentHtml = ed.save();\r\n                $('input[name=content]').val(contentHtml).change();\r\n            });\r\n            ed.on('init', function(e) {\r\n\r\n                if ($('input[name=content]').val()) {\r\n                    tinymce.activeEditor.setContent($('input[name=content]').val());\r\n                }\r\n\r\n                if ($('input[name=cover]').val()) {\r\n                    $('.post-hero').css({ 'background': 'url(\"http://' + window.location.host + $('input[name=cover]').val() + '\")', 'background-size': 'cover' });\r\n                }\r\n                if (!window.location.host.lastIndexOf('edit')) {\r\n                    readInputCache();\r\n                }\r\n\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n$('.add-btn').click(function() {\r\n    var transloader = $('<div>').attr('class', 'expand-transition');\r\n    $(this).append(transloader);\r\n    var targetUrl = $(this).data('url');\r\n    var uploadType = $(this).data('type');\r\n    $.get(targetUrl, function(res) {\r\n        $('#modal-cust').find('.container').html(res);\r\n        $('#btn-cancel').click(function() {\r\n            $('#body').show();\r\n            $('#modal-cust').hide('fast');\r\n            $('#modal-cust').find('.container').html('');\r\n        });\r\n        $('#modal-cust').show('slow');\r\n        $('#body').hide('slow');\r\n        initUploadOf(uploadType);\r\n        transloader.remove();\r\n        $('#edit-pic').click(uploadPic);\r\n    });\r\n});\r\n\r\nfunction uploadPic() {\r\n    var img = $(this).next('img');\r\n    var loader = $(this).find('#pic-loader');\r\n    var label = $(this).find('label');\r\n    var tempImgInput = $('<input>').attr({\r\n        'type': 'file',\r\n        'class': 'temp-input'\r\n    }).css({\r\n        'display': 'none',\r\n        'position': 'absolute'\r\n    }).change(function() {\r\n        if (this.files && this.files[0]) {\r\n            var reader = new FileReader();\r\n            reader.onload = function(e) {\r\n                img.attr('src', e.target.result);\r\n            };\r\n            reader.readAsDataURL(this.files[0]);\r\n            label.removeClass('btn').addClass('pct');\r\n            var updateProgress = function updateProgress(oEvent) {\r\n                var pct = Math.ceil(100 * oEvent.loaded / oEvent.total);\r\n                var height = 100 - pct;\r\n                loader.css({ 'height': height + 'px' });\r\n                label.text(pct + '%');\r\n            };\r\n            var fileUploadReq = new XMLHttpRequest();\r\n            fileUploadReq.withCredentials = false;\r\n            fileUploadReq.open('POST', '/images');\r\n\r\n            fileUploadReq.onload = function() {\r\n                var json = JSON.parse(fileUploadReq.responseText);\r\n                console.log(json.location);\r\n                img.attr('src', json.location);\r\n                label.removeClass('pct').addClass('btn').text('change');\r\n                $('.temp-input').remove();\r\n            };\r\n            fileUploadReq.upload.addEventListener(\"progress\", updateProgress, false);\r\n            var formData = new FormData();\r\n            formData.append('image', this.files[0], this.files[0].name);\r\n            fileUploadReq.send(formData);\r\n        }\r\n    });\r\n    $('body').append(tempImgInput);\r\n    tempImgInput.click();\r\n}\r\n\r\nfunction uploadHero() {\r\n    var hero = $('.post-hero');\r\n    var tempImgInput = $('<input>').attr({\r\n        'type': 'file',\r\n        'class': 'temp-input'\r\n    }).css({\r\n        'display': 'none',\r\n        'position': 'absolute'\r\n    }).change(function() {\r\n\r\n        if (this.files && this.files[0]) {\r\n            /*var reader = new FileReader();\r\n\r\n            reader.onload = function(e) {\r\n                hero.css({ 'background': 'url(\"' + e.target.result + '\")', 'background-size': 'cover' });\r\n            };\r\n            reader.readAsDataURL(this.files[0]);*/\r\n            /*label.removeClass('btn').addClass('pct');\r\n            var updateProgress = function updateProgress(oEvent) {\r\n                var pct = Math.ceil(100 * oEvent.loaded / oEvent.total);\r\n                var height = 100 - pct;\r\n                loader.css({ 'height': height + 'px' });\r\n                label.text(pct + '%');\r\n            };*/\r\n            var fileUploadReq = new XMLHttpRequest();\r\n            fileUploadReq.withCredentials = false;\r\n            fileUploadReq.open('POST', '/upload/images');\r\n\r\n            fileUploadReq.onload = function() {\r\n                var json = JSON.parse(fileUploadReq.responseText);\r\n                hero.css({ 'background': 'url(\"http://' + window.location.host + json.location + '\")', 'background-size': 'cover' });\r\n                $('.input-hero-img').val(json.location).change();\r\n                //label.removeClass('pct').addClass('btn').text('change');\r\n                $('.temp-input').remove();\r\n            };\r\n            //fileUploadReq.upload.addEventListener(\"progress\", updateProgress, false);\r\n            var formData = new FormData();\r\n            formData.append('image', this.files[0], this.files[0].name);\r\n            fileUploadReq.send(formData);\r\n        }\r\n    });\r\n    $('body').append(tempImgInput);\r\n    tempImgInput.click();\r\n}\r\n\r\nfunction computProgress(oEvent) {\r\n    var percentComplete = Math.ceil(1000 * oEvent.loaded / oEvent.total) / 10 + '%';\r\n    return percentComplete;\r\n}\r\n\r\nfunction GetCurrentDate() {\r\n    var cdate = new Date();\r\n    var month = cdate.getMonth() < 9 ? '0' + (cdate.getMonth() + 1) : cdate.getMonth() + 1;\r\n    var currentDate = cdate.getFullYear() + \"-\" + month + \"-\" + cdate.getDate();\r\n    return currentDate;\r\n}\r\n\r\nfunction getQuoteText(htmlStr) {\r\n    var p = '';\r\n    $(htmlStr).find('*').each(function() {\r\n        if ($(this).text().length > 32) {\r\n            p = $(this).text();\r\n            return false;\r\n        }\r\n    });\r\n    return p;\r\n}\r\n"],"sourceRoot":"/source/"}